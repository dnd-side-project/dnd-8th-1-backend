# dev profile

spring.profiles.active=prod

# aws parameter store
spring.config.import=aws-parameterstore:
aws.paramstore.prefix=/config
aws.paramstore.name=/database_prod
aws.paramstore.enabled=true
aws.paramstore.profile-separator=_

#spring.config.activate.on-profile=prod
#aws.paramstore.region=ap-northeast-2




# mariadb database
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://${DATABASE_URL}:3306/aws_mariadb
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}





# JPA - 테이블 생성 전략
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.highlight_sql=true
# JPA - SQL 파라미터가 어떤 값이 들어가는지 확인 가능
logging.level.org.hibernate.type.descriptor.sql=trace
# JPA - SQL 쿼리 확인 가능
logging.level.org.hibernate.SQL=debug
# JPA - 개발자가 작성한 JPQL 확인 가능
spring.jpa.properties.hibernate.use_sql_comments=true





# redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=


jwt.secret=secretkeyserveroutpuasdfqwerzxcvpoiu

google.user.info.url=https://www.googleapis.com/oauth2/v3/userinfo?access_token=%s